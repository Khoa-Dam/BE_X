{
	"info": {
		"_postman_id": "94b386e1-6be4-4cb1-94f8-c7a07d694284",
		"name": "X-Clone",
		"description": "# 🚀 Get started here\n\nThis template guides you through CRUD operations (GET, POST, PUT, DELETE), variables, and tests.\n\n## 🔖 **How to use this template**\n\n#### **Step 1: Send requests**\n\nRESTful APIs allow you to perform CRUD operations using the POST, GET, PUT, and DELETE HTTP methods.\n\nThis collection contains each of these [request](https://learning.postman.com/docs/sending-requests/requests/) types. Open each request and click \"Send\" to see what happens.\n\n#### **Step 2: View responses**\n\nObserve the response tab for status code (200 OK), response time, and size.\n\n#### **Step 3: Send new Body data**\n\nUpdate or add new data in \"Body\" in the POST request. Typically, Body data is also used in PUT request.\n\n```\n{\n    \"name\": \"Add your name in the body\"\n}\n\n ```\n\n#### **Step 4: Update the variable**\n\nVariables enable you to store and reuse values in Postman. We have created a [variable](https://learning.postman.com/docs/sending-requests/variables/) called `base_url` with the sample request [https://postman-api-learner.glitch.me](https://postman-api-learner.glitch.me). Replace it with your API endpoint to customize this collection.\n\n#### **Step 5: Add tests in the \"Scripts\" tab**\n\nAdding tests to your requests can help you confirm that your API is working as expected. You can write test scripts in JavaScript and view the output in the \"Test Results\" tab.\n\n<img src=\"https://content.pstmn.io/fa30ea0a-373d-4545-a668-e7b283cca343/aW1hZ2UucG5n\" alt=\"\" height=\"1530\" width=\"2162\">\n\n## 💪 Pro tips\n\n- Use folders to group related requests and organize the collection.\n    \n- Add more [scripts](https://learning.postman.com/docs/writing-scripts/intro-to-scripts/) to verify if the API works as expected and execute workflows.\n    \n\n## 💡Related templates\n\n[API testing basics](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=e9a37a28-055b-49cd-8c7e-97494a21eb54&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)  \n[API documentation](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=e9c28f47-1253-44af-a2f3-20dce4da1f18&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)  \n[Authorization methods](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=31a9a6ed-4cdf-4ced-984c-d12c9aec1c27&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "37311745",
		"_collection_link": "https://vn2222.postman.co/workspace/NguoiVN~2453d60f-2d3d-4ee7-b52f-a3397191d05f/collection/37311745-94b386e1-6be4-4cb1-94f8-c7a07d694284?action=share&source=collection_link&creator=37311745"
	},
	"item": [
		{
			"name": "auth",
			"item": [
				{
					"name": "Register",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"hoaphamtest1\",\r\n    \"email\": \"hoaphamtest1@gmail.com\",\r\n    \"password\": \"Hhoaphamtest1,\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{$url}}/auth/register",
							"host": [
								"{{$url}}"
							],
							"path": [
								"auth",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Lưu tokens vào environment nếu response có structure: { success: true, data: { accessToken, refreshToken } }\r",
									"// try {\r",
									"//   const res = pm.response.json();\r",
									"//   if (res && res.success && res.data) {\r",
									"//     if (res.data.accessToken) pm.environment.set(\"accessToken\", res.data.accessToken);\r",
									"//     if (res.data.refreshToken) pm.environment.set(\"refreshToken\", res.data.refreshToken);\r",
									"//   }\r",
									"// } catch (e) { console.log(e); }\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{    \r\n    \"email\": \"hoaphamtest1@gmail.com\",\r\n    \"password\": \"Hhoaphamtest1,\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{$url}}/auth/login",
							"host": [
								"{{$url}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Lưu tokens vào environment nếu response có structure: { success: true, data: { accessToken, refreshToken } }\r",
									"// try {\r",
									"//   const res = pm.response.json();\r",
									"//   if (res && res.success && res.data) {\r",
									"//     if (res.data.accessToken) pm.environment.set(\"accessToken\", res.data.accessToken);\r",
									"//     if (res.data.refreshToken) pm.environment.set(\"refreshToken\", res.data.refreshToken);\r",
									"//   }\r",
									"// } catch (e) { console.log(e); }\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{    \r\n    \"email\": \"hoaphamtest1@gmail.com\",\r\n    \"password\": \"Hhoaphamtest1,\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{$url}}/auth/login",
							"host": [
								"{{$url}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Logout",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Logout success\", function () {\r",
									"  const res = pm.response.json();\r",
									"  pm.expect(res).to.have.property(\"success\", true);\r",
									"  // Xoá token khỏi environment\r",
									"  pm.environment.unset(\"accessToken\");\r",
									"  pm.environment.unset(\"refreshToken\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4YWUxMGZkZDU4MDA4YjljZTllZWI2ZCIsImVtYWlsIjoiaG9hcGhhbTExMUBnbWFpbC5jb20iLCJuYW1lIjoiaG9hcGhhbSIsInJvbGUiOiJVU0VSIiwiaWF0IjoxNzU2MjgyOTM4LCJleHAiOjE3NTYyODM4Mzh9.SL0UPLFjWfwinjFIN6lCLGQoCjJ45Atxgikz1kIKcd0",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{$url}}/auth/logout",
							"host": [
								"{{$url}}"
							],
							"path": [
								"auth",
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "Refresh",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Refresh should be unauthorized after logout\", () => {\r",
									"  pm.response.to.have.status(401);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4YWY0NDhjY2I3ZTUyYmY4OWVhYjc0MSIsImlhdCI6MTc1NjMxNjk3MywiZXhwIjoxNzU4OTA4OTczfQ.ZlwZCCaPkrJ36NjWqGWtqdFyhoILUjGQuQoEYdZ2Eik",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{$url}}/auth/refresh",
							"host": [
								"{{$url}}"
							],
							"path": [
								"auth",
								"refresh"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "users",
			"item": [
				{
					"name": "Me",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4YWY0NDhjY2I3ZTUyYmY4OWVhYjc0MSIsImVtYWlsIjoiaG9hcGhhbXRlc3QxQGdtYWlsLmNvbSIsIm5hbWUiOiJob2FwaGFtdGVzdDEiLCJyb2xlIjoiVVNFUiIsImlhdCI6MTc1NjMxNjk3MywiZXhwIjoxNzU2MzE3ODczfQ.sJLSkaA-lnRMOihhZ2Uy14sEPU67KV7DJ0GrbaTlJ9A",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{$url}}/users/me",
							"host": [
								"{{$url}}"
							],
							"path": [
								"users",
								"me"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Should return 200 OK\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response should contain updated user info\", function () {\r",
									"    const res = pm.response.json();\r",
									"    pm.expect(res).to.have.property(\"data\");\r",
									"    pm.expect(res.data).to.have.property(\"name\", \"Pham Xuan Hoa\");\r",
									"});\r",
									"\r",
									"pm.test(\"Unauthorized without token\", function () {\r",
									"    // test riêng khi không gửi token (nên tạo request khác để thử)\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4YWY0NDhjY2I3ZTUyYmY4OWVhYjc0MSIsImVtYWlsIjoiaG9hcGhhbXRlc3QxQGdtYWlsLmNvbSIsIm5hbWUiOiJob2FwaGFtdGVzdDEiLCJyb2xlIjoiVVNFUiIsImlhdCI6MTc1NjMxNjk3MywiZXhwIjoxNzU2MzE3ODczfQ.sJLSkaA-lnRMOihhZ2Uy14sEPU67KV7DJ0GrbaTlJ9A",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Xuan Hoatest123\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{$url}}/users/me",
							"host": [
								"{{$url}}"
							],
							"path": [
								"users",
								"me"
							]
						}
					},
					"response": []
				},
				{
					"name": "uploadAvatar",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4YWY0NDhjY2I3ZTUyYmY4OWVhYjc0MSIsImVtYWlsIjoiaG9hcGhhbXRlc3QxQGdtYWlsLmNvbSIsIm5hbWUiOiJob2FwaGFtdGVzdDEiLCJyb2xlIjoiVVNFUiIsImlhdCI6MTc1NjMxNjk3MywiZXhwIjoxNzU2MzE3ODczfQ.sJLSkaA-lnRMOihhZ2Uy14sEPU67KV7DJ0GrbaTlJ9A",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "/C:/Users/DELL/OneDrive/Pictures/Screenshots/Screenshot 2024-12-03 223039.png"
								}
							]
						},
						"url": {
							"raw": "{{$url}}/users/me/avatar",
							"host": [
								"{{$url}}"
							],
							"path": [
								"users",
								"me",
								"avatar"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "uploads",
			"item": [
				{
					"name": "UploadMultipart",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4YWY0NDhjY2I3ZTUyYmY4OWVhYjc0MSIsImVtYWlsIjoiaG9hcGhhbXRlc3QxQGdtYWlsLmNvbSIsIm5hbWUiOiJYdWFuIEhvYXRlc3QxMjMiLCJyb2xlIjoiVVNFUiIsImlhdCI6MTc1NjMyNDkzMCwiZXhwIjoxNzU2MzI1ODMwfQ.84JhH3YdOzxG9REa5Wx3efD__KEqxgXE28rwsJp50Hg",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4YWY0NDhjY2I3ZTUyYmY4OWVhYjc0MSIsImVtYWlsIjoiaG9hcGhhbXRlc3QxQGdtYWlsLmNvbSIsIm5hbWUiOiJYdWFuIEhvYXRlc3QxMjMiLCJyb2xlIjoiVVNFUiIsImlhdCI6MTc1NjMyNDkzMCwiZXhwIjoxNzU2MzI1ODMwfQ.84JhH3YdOzxG9REa5Wx3efD__KEqxgXE28rwsJp50Hg",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "/D:/GÓC HỌC TẬP/ĐẠI HỌC/NĂM 2/CD-GTTM/BT2.69.docx"
								}
							]
						},
						"url": {
							"raw": "{{$url}}/uploads/",
							"host": [
								"{{$url}}"
							],
							"path": [
								"uploads",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "GetFileMeta",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4YWY0NDhjY2I3ZTUyYmY4OWVhYjc0MSIsImVtYWlsIjoiaG9hcGhhbXRlc3QxQGdtYWlsLmNvbSIsIm5hbWUiOiJYdWFuIEhvYXRlc3QxMjMiLCJyb2xlIjoiVVNFUiIsImlhdCI6MTc1NjMyNDkzMCwiZXhwIjoxNzU2MzI1ODMwfQ.84JhH3YdOzxG9REa5Wx3efD__KEqxgXE28rwsJp50Hg",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{$url}}/uploads/{{data.id}}",
							"host": [
								"{{$url}}"
							],
							"path": [
								"uploads",
								"{{data.id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "DeleteFile",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4YWY0NDhjY2I3ZTUyYmY4OWVhYjc0MSIsImVtYWlsIjoiaG9hcGhhbXRlc3QxQGdtYWlsLmNvbSIsIm5hbWUiOiJYdWFuIEhvYXRlc3QxMjMiLCJyb2xlIjoiVVNFUiIsImlhdCI6MTc1NjMyNDkzMCwiZXhwIjoxNzU2MzI1ODMwfQ.84JhH3YdOzxG9REa5Wx3efD__KEqxgXE28rwsJp50Hg",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4YWY0NDhjY2I3ZTUyYmY4OWVhYjc0MSIsImVtYWlsIjoiaG9hcGhhbXRlc3QxQGdtYWlsLmNvbSIsIm5hbWUiOiJYdWFuIEhvYXRlc3QxMjMiLCJyb2xlIjoiVVNFUiIsImlhdCI6MTc1NjMyNDkzMCwiZXhwIjoxNzU2MzI1ODMwfQ.84JhH3YdOzxG9REa5Wx3efD__KEqxgXE28rwsJp50Hg",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{$url}}/uploads/{{data.id}}",
							"host": [
								"{{$url}}"
							],
							"path": [
								"uploads",
								"{{data.id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "posts",
			"item": [
				{
					"name": "List",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"List OK\", () => {\r",
									"  pm.response.to.have.status(200);\r",
									"  const res = pm.response.json();\r",
									"  pm.expect(res.success).to.be.true;\r",
									"  pm.expect(res.data).to.be.an(\"array\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4YWUxMGZkZDU4MDA4YjljZTllZWI2ZCIsImVtYWlsIjoiaG9hcGhhbTExMUBnbWFpbC5jb20iLCJuYW1lIjoiWHVhbiBIb2ExIiwicm9sZSI6IlVTRVIiLCJpYXQiOjE3NTYyOTcxODUsImV4cCI6MTc1NjI5ODA4NX0.AKvJ-1fRGkiElmu2TFV1W0O3NydBod5Ws5cOr4aJDIg",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{$url}}/posts/",
							"host": [
								"{{$url}}"
							],
							"path": [
								"posts",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Detail",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"authorId\": \"68ae10fdd58008b9ce9eeb6d\",\r\n    \"coverId\": null\r\n    //\"_id\": \"68aef939c59fe9411a588159\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{$url}}/posts/{{postId}}",
							"host": [
								"{{$url}}"
							],
							"path": [
								"posts",
								"{{postId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Post",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Create OK\", () => {\r",
									"  pm.response.to.have.status(200);\r",
									"  const res = pm.response.json();\r",
									"  pm.expect(res.success).to.be.true;\r",
									"  pm.expect(res.data).to.have.property(\"id\");\r",
									"  pm.environment.set(\"postId\", res.data.id); // lưu để test update/delete\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4YWY0NDhjY2I3ZTUyYmY4OWVhYjc0MSIsImVtYWlsIjoiaG9hcGhhbXRlc3QxQGdtYWlsLmNvbSIsIm5hbWUiOiJob2FwaGFtdGVzdDEiLCJyb2xlIjoiVVNFUiIsImlhdCI6MTc1NjMxNjk3MywiZXhwIjoxNzU2MzE3ODczfQ.sJLSkaA-lnRMOihhZ2Uy14sEPU67KV7DJ0GrbaTlJ9A",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"title\": \"Hello\",\r\n  \"content\": \"Nội dung ................\",\r\n  \"status\": \"PUBLISHED\",\r\n  \"coverId\": null \r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{$url}}/posts/",
							"host": [
								"{{$url}}"
							],
							"path": [
								"posts",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Update",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Update OK\", () => {\r",
									"  pm.response.to.have.status(200);\r",
									"  const res = pm.response.json();\r",
									"  pm.expect(res.success).to.be.true;\r",
									"  pm.expect(res.data.title).to.eql(\"Tiêu đề đã chỉnh\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4YWY0NDhjY2I3ZTUyYmY4OWVhYjc0MSIsImVtYWlsIjoiaG9hcGhhbXRlc3QxQGdtYWlsLmNvbSIsIm5hbWUiOiJob2FwaGFtdGVzdDEiLCJyb2xlIjoiVVNFUiIsImlhdCI6MTc1NjMxNjk3MywiZXhwIjoxNzU2MzE3ODczfQ.sJLSkaA-lnRMOihhZ2Uy14sEPU67KV7DJ0GrbaTlJ9A",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"content\": \"Test update post\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{$url}}/posts/68af475acb7e52bf89eab762",
							"host": [
								"{{$url}}"
							],
							"path": [
								"posts",
								"68af475acb7e52bf89eab762"
							]
						}
					},
					"response": []
				},
				{
					"name": "Remove",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Delete OK\", () => {\r",
									"  pm.response.to.have.status(200);\r",
									"  const res = pm.response.json();\r",
									"  pm.expect(res.success).to.be.true;\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4YWUxMGZkZDU4MDA4YjljZTllZWI2ZCIsImVtYWlsIjoiaG9hcGhhbTExMUBnbWFpbC5jb20iLCJuYW1lIjoiWHVhbiBIb2ExIiwicm9sZSI6IlVTRVIiLCJpYXQiOjE3NTYzMDAxNDYsImV4cCI6MTc1NjMwMTA0Nn0.Q9RB9otUB32vk7j0wHSqkgWnf-JaitLRZOQDqUyVn1Y",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{$url}}/posts/{{postId}}",
							"host": [
								"{{$url}}"
							],
							"path": [
								"posts",
								"{{postId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "chat",
			"item": [
				{
					"name": "getChat",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{$url}}/chats/",
							"host": [
								"{{$url}}"
							],
							"path": [
								"chats",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "getOrCreateChat",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{$url}}/chats/with/{{userId}}",
							"host": [
								"{{$url}}"
							],
							"path": [
								"chats",
								"with",
								"{{userId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "sendMessage",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{ \"content\": \"Xin chào từ lại nha\" }\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{$url}}/chats/{{chatId}}/messages",
							"host": [
								"{{$url}}"
							],
							"path": [
								"chats",
								"{{chatId}}",
								"messages"
							]
						}
					},
					"response": []
				},
				{
					"name": "markAsRead",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4YjExNTY1ODM5OTlmYzVkNmZjOTFhYyIsImVtYWlsIjoiaGVsb0BnbWFpbC5jb20iLCJuYW1lIjoiaGVsbyIsInJvbGUiOiJVU0VSIiwiaWF0IjoxNzU2NzIwMzkxLCJleHAiOjE3NTY3MjEyOTF9.w0AxfZ-gSHLX36Tz45X9LPJIDsTbcu5jTvtBi_vw-5U",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{$url}}/chats/{{chatId}}/read",
							"host": [
								"{{$url}}"
							],
							"path": [
								"chats",
								"{{chatId}}",
								"read"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "id",
			"value": "1"
		},
		{
			"key": "base_url",
			"value": "https://99318cc5-f2db-4208-ad3a-d1964e768001.mock.pstmn.io"
		}
	]
}